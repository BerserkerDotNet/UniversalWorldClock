<Common:StateAwareUserControl
    x:Class="UniversalWorldClock.Views.Clock"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Common="using:UniversalWorldClock.Common" xmlns:Converters="using:UniversalWorldClock.Converters"
    mc:Ignorable="d"
    Background="Azure"
    d:DesignHeight="150"
    d:DesignWidth="400">
    <UserControl.Resources>
        <Converters:StringConverter x:Key="StringFormatter"/>
        <Converters:TimeStringConverter x:Key="TimeFormatter"/>
        <Converters:UTCOffsetConverter x:Key="UTCOffsetFormatter"/>
        <Converters:TimeToAngleConverter x:Key="DateToAngleConverter"/>
        <Converters:CountryCodeToFlagFilePathConveretr x:Key="CountryCodeToFilePathConverter"/>
    </UserControl.Resources>
    <Grid>
        <Grid x:Name="normalClock" PointerEntered="normalClock_PointerEntered_1" PointerExited="normalClock_PointerExited_1">
            <Grid.Resources>
                <x:Double x:Key="CanvasWidth">250</x:Double>
                <x:Double x:Key="CanvasHeight">215</x:Double>
                <x:Double x:Key="EllipseHeight">200</x:Double>
                <x:Double x:Key="EllipseWidth">200</x:Double>
                <x:Double x:Key="EllipseTopOffset">25</x:Double>
                <x:Double x:Key="EllipseLeftOffset">25</x:Double>
                <x:Double x:Key="FlagHeight">30</x:Double>
                <x:Double x:Key="CountryNameMargin">25</x:Double>
                <x:Double x:Key="CountryTextSize">10</x:Double>
                <x:Double x:Key="CityNameSize">14</x:Double>
                <!--Arrows-->
                <x:Double x:Key="ArrowsTopOffset">52</x:Double>
                <x:Double x:Key="ArrowsLeftOffset">125</x:Double>
                <x:Double x:Key="ArrowAfterRotationTransformY">70</x:Double>
                <!--Hours-->
                <x:Double x:Key="HoursArrowWidth">8</x:Double>
                <x:Double x:Key="HoursArrowHeight">82</x:Double>
                <x:Double x:Key="HoursArrowTransformX">-4</x:Double>
                <x:Double x:Key="HoursArrowTransformY">-80</x:Double>
                <!--Minutes-->
                <x:Double x:Key="MinutesArrowWidth">5</x:Double>
                <x:Double x:Key="MinutesArrowHeight">90</x:Double>
                <x:Double x:Key="MinutesArrowTransformX">-2.5</x:Double>
                <x:Double x:Key="MinutesArrowTransformY">-86</x:Double>
                <!--Seconds-->
                <x:Double x:Key="SecondsArrowWidth">0.5</x:Double>
                <x:Double x:Key="SecondsArrowHeight">87</x:Double>
                <x:Double x:Key="SecondsArrowTransformX">-0.25</x:Double>
                <x:Double x:Key="SecondsArrowTransformY">-90</x:Double>

                <Converters:ObjectSizeConverter x:Key="SizeConverter"/>
                <Converters:MarginObjectSizeConverter x:Key="MarginSizeConverter"/>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition />
                <RowDefinition Height="0.4*"/>
            </Grid.RowDefinitions>
            <Rectangle Fill="Transparent" Grid.RowSpan="3"/><!--Ugly trick to make pointer Enter/Exit working-->
            <Canvas x:Name="_markersCanvas" Grid.ColumnSpan="2" Grid.Row="1"
                Width="{Binding Source={StaticResource CanvasWidth}, Converter={StaticResource SizeConverter}}" 
                Height="{Binding Source={StaticResource CanvasHeight}, Converter={StaticResource SizeConverter}}" 
                HorizontalAlignment="Center" 
                VerticalAlignment="Center">
                <Canvas.ChildrenTransitions>
                    <TransitionCollection>
                        <RepositionThemeTransition/>
                    </TransitionCollection>
                </Canvas.ChildrenTransitions>

                <Ellipse x:Name="uiClockEllipse" Grid.Column="0" Grid.Row="1" 
                         Height="{Binding Source={StaticResource EllipseHeight}, Converter={StaticResource SizeConverter}}" 
                         Width="{Binding Source={StaticResource EllipseWidth}, Converter={StaticResource SizeConverter}}" Stroke="Gray" 
                     Canvas.Top="{Binding Source={StaticResource EllipseTopOffset}, Converter={StaticResource SizeConverter}}" 
                     Canvas.Left="{Binding Source={StaticResource EllipseLeftOffset}, Converter={StaticResource SizeConverter}}">
                    <Ellipse.Fill>
                        <ImageBrush ImageSource="/Assets/clockBG.jpg" />
                    </Ellipse.Fill>
                </Ellipse>
                <Image x:Name="uiFlagImage" Source="{Binding Path= CountryCode, Converter={StaticResource CountryCodeToFilePathConverter}}" 
               Height="{Binding Source={StaticResource FlagHeight}, Converter={StaticResource SizeConverter}}" HorizontalAlignment="Center" VerticalAlignment="Top"
                       ImageOpened="uiFlagImage_ImageOpened_1"/>
                <Rectangle Grid.Column="0" Grid.Row="1"
                           Width="{Binding Source={StaticResource HoursArrowWidth}, Converter={StaticResource SizeConverter}}" 
                           Height="{Binding Source={StaticResource HoursArrowHeight}, Converter={StaticResource SizeConverter}}" Fill="White" 
                   RadiusX="5" RadiusY="5"
                   StrokeThickness="0.6" Stroke="Gray"
                   Canvas.Top="{Binding Source={StaticResource ArrowsTopOffset}, Converter={StaticResource SizeConverter}}" 
                           Canvas.Left="{Binding Source={StaticResource ArrowsLeftOffset}, Converter={StaticResource SizeConverter}}">
                    <Rectangle.RenderTransform>
                        <TransformGroup>
                            <TranslateTransform X="{Binding Source={StaticResource HoursArrowTransformX}, Converter={StaticResource SizeConverter}}" 
                                                Y="{Binding Source={StaticResource HoursArrowTransformY}, Converter={StaticResource SizeConverter}}" />
                            <RotateTransform Angle="{Binding Date, Converter={StaticResource DateToAngleConverter}, ConverterParameter='hours'}" />
                            <TranslateTransform X="0" Y="{Binding Source={StaticResource ArrowAfterRotationTransformY}, Converter={StaticResource SizeConverter}}" />
                        </TransformGroup>
                    </Rectangle.RenderTransform>
                </Rectangle>
                <Rectangle Grid.Column="0" Grid.Row="1" Width="{Binding Source={StaticResource MinutesArrowWidth}, Converter={StaticResource SizeConverter}}" 
                           Height="{Binding Source={StaticResource MinutesArrowHeight}, Converter={StaticResource SizeConverter}}" Fill="White" 
                   RadiusX="4" RadiusY="4"
                   StrokeThickness="0.6" Stroke="Gray"
                                  Canvas.Top="{Binding Source={StaticResource ArrowsTopOffset}, Converter={StaticResource SizeConverter}}" 
                           Canvas.Left="{Binding Source={StaticResource ArrowsLeftOffset}, Converter={StaticResource SizeConverter}}">
                    <Rectangle.RenderTransform>
                        <TransformGroup>
                            <TranslateTransform X="{Binding Source={StaticResource MinutesArrowTransformX}, Converter={StaticResource SizeConverter}}" 
                                                Y="{Binding Source={StaticResource MinutesArrowTransformY}, Converter={StaticResource SizeConverter}}" />
                            <RotateTransform Angle="{Binding Date, Converter={StaticResource DateToAngleConverter}, ConverterParameter='minutes'}" />
                            <TranslateTransform X="0" Y="{Binding Source={StaticResource ArrowAfterRotationTransformY}, Converter={StaticResource SizeConverter}}" />
                        </TransformGroup>
                    </Rectangle.RenderTransform>
                </Rectangle>
                <Rectangle Grid.Column="0" Grid.Row="1" Width="{Binding Source={StaticResource SecondsArrowWidth}, Converter={StaticResource SizeConverter}}"
                           Height="{Binding Source={StaticResource SecondsArrowHeight}, Converter={StaticResource SizeConverter}}" Fill="White"
                    RadiusX="2" RadiusY="2"
                                  Canvas.Top="{Binding Source={StaticResource ArrowsTopOffset}, Converter={StaticResource SizeConverter}}" 
                           Canvas.Left="{Binding Source={StaticResource ArrowsLeftOffset}, Converter={StaticResource SizeConverter}}">
                    <Rectangle.RenderTransform>
                        <TransformGroup>
                            <TranslateTransform X="{Binding Source={StaticResource SecondsArrowTransformX}, Converter={StaticResource SizeConverter}}" 
                                                Y="{Binding Source={StaticResource SecondsArrowTransformY}, Converter={StaticResource SizeConverter}}" />
                            <RotateTransform Angle="{Binding Date, Converter={StaticResource DateToAngleConverter}, ConverterParameter='seconds'}" />
                            <TranslateTransform X="0" Y="{Binding Source={StaticResource ArrowAfterRotationTransformY}, Converter={StaticResource SizeConverter}}" />
                        </TransformGroup>
                    </Rectangle.RenderTransform>
                </Rectangle>
            </Canvas>

            <TextBlock Text="{Binding CountryName}"
                   Grid.Row="1" 
                   VerticalAlignment="Bottom" HorizontalAlignment="Center" MaxWidth="150" 
                   TextAlignment="Center"
                   Margin="{Binding Source={StaticResource CountryNameMargin}, Converter={StaticResource MarginSizeConverter}}" 
                       Style="{StaticResource TitleTextStyle}"
                       FontSize="{Binding Source={StaticResource CountryTextSize}, Converter={StaticResource SizeConverter}}"/>
            <TextBlock x:Name="uiCityName" Grid.Row="0" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center"
                   Text="{Binding Path=CityName}"  Style="{StaticResource TitleTextStyle}"  MaxWidth="250" TextAlignment="Center" 
                       FontSize="{Binding Source={StaticResource CityNameSize}, Converter={StaticResource SizeConverter}}"/>
            <!--<StackPanel x:Name="uiClockNameEditor" Grid.Row="0" Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Center" MaxWidth="250" Orientation="Horizontal" Visibility="Collapsed">
                <TextBox Width="150"/>
                <Button Style="{StaticResource CustomDeleteButtonStyle}" Content="&#x2714;"/>
                <Button Style="{StaticResource CustomDeleteButtonStyle}" Content="&#xE106;"/>
            </StackPanel>-->
            <StackPanel x:Name="uiClockOptions" Orientation="Horizontal" Grid.Row="0" HorizontalAlignment="Right"  Height="30" Visibility="Collapsed">
                <Button Style="{StaticResource CustomDeleteButtonStyle}" Command="{Binding Delete}" />
                <!--<Button Style="{StaticResource CustomMoreDetailsButtonStyle}" />-->
            </StackPanel>
            <StackPanel Grid.ColumnSpan="2"  Grid.Row="2" Margin="0,40,0,10">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" >
                    <TextBlock Margin="5" Text="{Binding Path=Date, Converter={StaticResource StringFormatter},ConverterParameter='{}{0:dd MMM yyyy}'}"
                           Style="{StaticResource SubtitleTextStyle}" TextAlignment="Center"/>
                    <TextBlock Margin="5" Text="{Binding Path=Date, Converter={StaticResource TimeFormatter}}"
                           Style="{StaticResource SubtitleTextStyle}" TextAlignment="Center"/>
                </StackPanel>
                <TextBlock Text="{Binding Path=UTCOffset, Converter={StaticResource UTCOffsetFormatter}}" 
                       HorizontalAlignment="Center"
                       Style="{StaticResource SubtitleTextStyle}"/>
            </StackPanel>
        </Grid>
        <Grid x:Name="snappedClock"
            Visibility="Collapsed" 
              Margin="0,0,0,15"
              Width="280">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Image Source="{Binding Path= CountryCode, Converter={StaticResource CountryCodeToFilePathConverter}}" 
                        Height="25" HorizontalAlignment="Left" Margin="10,10,10,0" />
            <TextBlock Grid.Row="0" Text="{Binding CityName}"
                               TextAlignment="Center" Margin="0,5,0,0"
                               HorizontalAlignment="Center" VerticalAlignment="Center" Style="{StaticResource TitleTextStyle}" MaxWidth="130"/>
            <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock  TextAlignment="Center" 
                       Text="{Binding Path=Date, Converter={StaticResource TimeFormatter},ConverterParameter='true'}"
                       FontSize="80" 
                       />
                <TextBlock TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Top" Visibility="{Binding IsTimeModifierVisible}"
                       Text="{Binding Path=Date, Converter={StaticResource StringFormatter},ConverterParameter='{}{0:tt}'}"
                       FontSize="20" Margin="5,0,0,0"
                       />
            </StackPanel>
            <StackPanel  Grid.Row="2" >
                <TextBlock Text="{Binding CountryName}"
                       VerticalAlignment="Center" HorizontalAlignment="Center"
                       TextAlignment="Center" Style="{StaticResource SubtitleTextStyle}"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" >
                    <TextBlock Margin="5" Text="{Binding Path=Date, Converter={StaticResource StringFormatter},ConverterParameter='{}{0:dd MMM yyyy}'}"
                           Style="{StaticResource SubtitleTextStyle}"/>
                    <TextBlock Text="{Binding Path=UTCOffset, Converter={StaticResource UTCOffsetFormatter}}" 
                       HorizontalAlignment="Center"
                               TextAlignment="Center"
                               VerticalAlignment="Center"
                       Style="{StaticResource SubtitleTextStyle}"/>
                </StackPanel>

            </StackPanel>

        </Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="appViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>
                <VisualState x:Name="FullScreenPortrait"/>
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="normalClock"
                                                       Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="snappedClock"
                                                       Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Common:StateAwareUserControl>
